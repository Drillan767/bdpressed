[variables]
UPLOAD_MAX_FILESIZE = '50M'
POST_MAX_SIZE = '50M'

[phases.setup]
nixPkgs = [
    "curl",
    "git",
    "unzip",
    "nginx",
    "nodejs_22",
    "yarn",
    "php84",
    "php84Extensions.opcache",
    "php84Extensions.pdo",
    "php84Extensions.pdo_mysql",
    "php84Extensions.mbstring",
    "php84Extensions.xml",
    "php84Extensions.curl",
    "php84Extensions.gd",
    "php84Extensions.zip",
    "php84Extensions.fileinfo",
    "php84Extensions.exif",
    "php84Extensions.sodium",
    "php84Extensions.bcmath",
    "php84Extensions.intl",
    "php84Extensions.redis",
    "php84Packages.composer",
]
cmds = [
    'PHP_INI_PATH=$(php --ini | grep "Additional .ini files parsed:" | cut -d: -f2 | tr -d " "); echo "PHP_INI_PATH is $PHP_INI_PATH"; echo "upload_max_filesize=50M" >> $PHP_INI_PATH; echo "post_max_size=50M" >> $PHP_INI_PATH; echo "Content of php.ini below:"; cat "$PHP_INI_PATH"',
    'mkdir -p /app/storage/logs /app/storage/framework/cache /app/storage/framework/sessions /app/storage/framework/views',
    'chmod -R 775 /app/storage /app/bootstrap/cache'
]

[phases.install]
cmds = [
    'composer install --no-dev --optimize-autoloader --no-interaction',
    'yarn install --frozen-lockfile --production'
]

[phases.build]
cmds = [
    'yarn build',
    'php artisan config:cache',
    'php artisan route:cache',
    'php artisan view:cache',
    'php artisan storage:link'
]

[start]
cmd = "sh -c 'php-fpm -D && nginx -g \"daemon off;\"'"

[staticAssets]

"nginx.template.conf" = '''
user www-data www-data;
worker_processes 5;
daemon off;

worker_rlimit_nofile 8192;

events {
  worker_connections  4096;  # Default: 1024
}

http {
    include    $!{nginx}/conf/mime.types;
    index    index.html index.htm index.php;

    client_max_body_size 50M;

    default_type application/octet-stream;
    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx-access.log;
    error_log /var/log/nginx-error.log;
    sendfile     on;
    tcp_nopush   on;
    server_names_hash_bucket_size 128; # this seems to be required for some vhosts

    server {
        listen ${PORT};
        listen [::]:${PORT};
        server_name localhost;

        $if(NIXPACKS_PHP_ROOT_DIR) (
            root ${NIXPACKS_PHP_ROOT_DIR};
        ) else (
            root /app;
        )

        add_header X-Content-Type-Options "nosniff";

        client_max_body_size 35M;

        index index.php;

        charset utf-8;

        $if(IS_LARAVEL) (
            location / {
                try_files $uri $uri/ /index.php?$query_string;
            }
        ) else ()

        $if(NIXPACKS_PHP_FALLBACK_PATH) (
          location / {
            try_files $uri $uri/ ${NIXPACKS_PHP_FALLBACK_PATH}?$query_string;
          }
        ) else ()

        location = /favicon.ico { access_log off; log_not_found off; }
        location = /robots.txt  { access_log off; log_not_found off; }

        $if(IS_LARAVEL) (
            error_page 404 /index.php;
        ) else ()

        location ~ \.php$ {
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_buffer_size 8k;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            include $!{nginx}/conf/fastcgi_params;
            include $!{nginx}/conf/fastcgi.conf;

            fastcgi_param PHP_VALUE "upload_max_filesize=30M \n post_max_size=35M";
        }

        location ~ /\.(?!well-known).* {
            deny all;
        }
    }
}
'''
